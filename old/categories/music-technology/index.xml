<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Music Technology on Kyle W. Baldwin</title><link>https://kylebaldw.in/categories/music-technology/</link><description>Recent content in Music Technology on Kyle W. Baldwin</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 28 Oct 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://kylebaldw.in/categories/music-technology/index.xml" rel="self" type="application/rss+xml"/><item><title>Running Lilypond on MacOS 10.15 (Catalina)</title><link>https://kylebaldw.in/posts/2019/running-lilypond-on-catalina/</link><pubDate>Mon, 28 Oct 2019 00:00:00 +0000</pubDate><guid>https://kylebaldw.in/posts/2019/running-lilypond-on-catalina/</guid><description>Updated 12-7-2019 with instructions on how to create an alias script for programs like Frescobaldi.
Like with all great things, updating operating systems breaks them. ü§∑‚Äç This time, there is an issue with Apple&amp;rsquo;s decision to discontinue the support of 32bit applications running on their x86_64 hardware. Generally, this is &amp;ldquo;easily&amp;rdquo; fixed by either compiling the program to support 64bit or running the app in a container that simulates the old 32bit processor/operating system.</description></item><item><title>Preprocess Lilypond excerpts for Hugo</title><link>https://kylebaldw.in/posts/2019/preprocess-lilypond-for-hugo/</link><pubDate>Fri, 04 Oct 2019 00:00:00 +0000</pubDate><guid>https://kylebaldw.in/posts/2019/preprocess-lilypond-for-hugo/</guid><description>As I have been exploring Hugo I&amp;rsquo;m finding a lot of things I like but it seems that it doesn&amp;rsquo;t allow for custom pre-processors. That&amp;rsquo;s okay. I&amp;rsquo;ll just do it myself. After trying multiple ideas, there seems to be one big concession I needed to make. Since Hugo has no ability to call outside executables, there needs to be two pipelines that are happening at the same time. While not optimal, the final product actually works pretty well.</description></item></channel></rss>